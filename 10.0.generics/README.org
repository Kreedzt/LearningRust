* 泛型, trait 和生命周期
  泛型是具体类型或其他属性的抽象替代. 我们可以表达泛型的属性, 而不需要在编写和编
  译代码时知道他们在这里实际上代表什么.

  本章会讨论如下内容:
  - 函数创建泛型函数, 结构体和枚举定义中的泛型
  - 用 *trait* 定义泛型行为, 可以与泛型结合来将泛型限制为拥有特定行为的类型
  - *生命周期*: 允许我们项编译器提供引用如何相互关联的泛型. Rust 的生命周期功能
    允许在很多情况下借用值的同时仍然使编译器能够检查这些引用的有效性

    
