* panic! 与不可恢复的错误
  Rust 有 ~panic!~ 红. 当执行这个宏时, 程序会打印出一个错误信息, 展开并清理数据,
  然后接着退出. 出现这种情况时. 程序员并不清楚如何处理它

  *Tips*: 当出现 panic 时, 程序默认会开始 *展开(unwinding)*, 这意味着 Rust 会回
   溯并清理它遇到的每一个函数的数据, 这个回溯并清理的过程有很多工作. 另一种选择
   是 *终止(abort)*, 这回 *不清理数据就退出* 程序. 那么程序锁使用的内存需要由
   *操作系统* 来清理. 如果需要的项目的最终二进制文件越小越好, panic 时通过在
   ~Cargo.toml~ 的 ~[profile]~ 部分增加 ~panic = 'abort'~, 可以由展开切换为终止
   #+begin_src toml
     # 在 release中直接终止
     [profile.release]
     panic = 'abort'
   #+end_src

   
